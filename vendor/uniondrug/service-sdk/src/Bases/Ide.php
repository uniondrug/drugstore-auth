<?php
/**
 * @author wsfuyibing <websearch@163.com>
 * @date   2019-10-30
 */
namespace Uniondrug\ServiceSdk\Bases;

use Composer\Script\Event;

/**
 * 构建IDE注释
 * @package Uniondrug\ServiceSdk\Bases
 */
class Ide
{
    private $event;

    public function __construct(Event $event = null)
    {
        $this->event = $event;
    }

    /**
     * 构建Vendor
     * @param Event $event
     */
    public static function builder(Event $event = null)
    {
        $ide = new Ide($event);
        $ide->sendTrait(array_merge($ide->scannerSdkFile("Modules"), $ide->scannerExports("Exports")), "Boot");
        $ide->sendTrait($ide->scannerSdkFile("Exports", "Backends"), "Backend");
        $ide->sendTrait($ide->scannerSdkFile("Exports", "Modules"), "Module");
        $ide->sendTrait($ide->scannerSdkFile("Exports", "Unions"), "Union");
    }

    private function sendTrait(array $data, string $name)
    {
        $name = ucfirst(strtolower($name));
        $file = __DIR__.'/../Traits/'.$name.'Trait.php';
        $parse = [
            'DATE' => date('Y-m-d'),
            'NAME' => $name,
            'COMMENTS' => ''
        ];
        foreach ($data as $item) {
            $parse['COMMENTS'] .= "\n * @property {$item[0]} {$item[1]}";
        }
        $template = $this->template();
        foreach ($parse as $key => $value) {
            $template = preg_replace("/\{\{".$key."\}\}/", $value, $template);
        }
        try {
            $fp = @fopen($file, 'wb+');
            fwrite($fp, $template);
            fclose($fp);
        } catch(\Throwable $e) {
        }
    }

    private function scannerExports(string ... $ns)
    {
        $result = [];
        $folder = __DIR__.'/../'.implode('/', $ns);
        if (is_dir($folder)) {
            $d = dir($folder);
            while (false !== ($entry = $d->read())) {
                if (preg_match("/^(\S+)\.php/i", $entry, $m) > 0) {
                    $prop = '\\Uniondrug\\ServiceSdk\\'.implode('\\', $ns).'\\'.$m[1];
                    $name = '$'.lcfirst($m[1]);
                    $result[] = [
                        $prop,
                        $name
                    ];
                }
            }
            $d->close();
        }
        return $result;
    }

    private function scannerSdkFile(string ... $ns)
    {
        $result = [];
        $folder = __DIR__.'/../'.implode('/', $ns);
        if (is_dir($folder)) {
            $d = dir($folder);
            while (false !== ($entry = $d->read())) {
                if (preg_match("/^(\S+)Sdk\.php/i", $entry, $m) > 0) {
                    $prop = '\\Uniondrug\\ServiceSdk\\'.implode('\\', $ns).'\\'.$m[1].'Sdk';
                    $name = '$'.lcfirst($m[1]);
                    $result[] = [
                        $prop,
                        $name
                    ];
                }
            }
            $d->close();
        }
        return $result;
    }

    private function template()
    {
        return <<<EOT
<?php
/**
 * do not edit this file
 * the file created when composer update executed
 * @author composer
 * @date   {{DATE}}
 */
namespace Uniondrug\ServiceSdk\Traits;

/**
 * {{NAME}}{{COMMENTS}}
 * @package Uniondrug\ServiceSdk\Traits
 */
trait {{NAME}}Trait {
}

EOT;
    }
}
